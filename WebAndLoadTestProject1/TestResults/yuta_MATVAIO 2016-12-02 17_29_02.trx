<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="296b60d1-9400-479a-a99c-be3b6e1971ab" name="yuta@MATVAIO 2016-12-02 17:29:02" runUser="MATVAIO\yuta" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="ローカル" id="af615b3f-2787-4d40-8c72-eb877e5b5b59">
    <Description>これらはローカル テスト実行用の既定のテスト設定です。</Description>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
    <Deployment runDeploymentRoot="yuta_MATVAIO 2016-12-02 17_29_02" />
    <Properties>
      <Property name="TestSettingsUIType" value="LoadTest" />
    </Properties>
  </TestSettings>
  <Times creation="2016-12-02T17:29:02.0343424+09:00" queuing="2016-12-02T17:29:02.3321774+09:00" start="2016-12-02T17:29:02.4299525+09:00" finish="2016-12-02T17:29:26.9673413+09:00" />
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <WebTest name="WebTest1" storage="d:\src\yuta\webandloadtestproject1\webandloadtestproject1\webtest1.webtest" id="a20ed876-00c3-4cdb-8138-c57f398c88d8" persistedWebTest="">
      <Execution id="b1f296f3-42b6-4918-b58a-2689d6274516" />
    </WebTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="一覧に存在しない結果" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="読み込まれたすべての結果" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="a20ed876-00c3-4cdb-8138-c57f398c88d8" executionId="b1f296f3-42b6-4918-b58a-2689d6274516" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <WebTestResult executionId="b1f296f3-42b6-4918-b58a-2689d6274516" testId="a20ed876-00c3-4cdb-8138-c57f398c88d8" testName="WebTest1" computerName="MATVAIO" duration="00:00:13.6538147" startTime="2016-12-02T17:29:02.4900077+09:00" endTime="2016-12-02T17:29:26.7853751+09:00" testType="4e7599fa-5ecb-43e9-a887-cd63cf72d207" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b1f296f3-42b6-4918-b58a-2689d6274516">
      <Output>
        <ErrorInfo>
          <Message>12 件のプライマリ要求、5 件の依存要求、および 0 件の条件付き規則に失敗しました</Message>
        </ErrorInfo>
      </Output>
      <ResultFiles>
        <ResultFile path="WebTest1.webtestResult" />
      </ResultFiles>
      <TestSettings name="ローカル" id="af615b3f-2787-4d40-8c72-eb877e5b5b59">
        <Description>これらはローカル テスト実行用の既定のテスト設定です。</Description>
        <Execution>
          <TestTypeSpecific>
            <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
              <Browser name="Internet Explorer 9.0" MaxConnections="6">
                <Headers>
                  <Header name="User-Agent" value="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)" />
                  <Header name="Accept" value="*/*" />
                  <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
                  <Header name="Accept-Encoding" value="GZIP" />
                </Headers>
              </Browser>
            </WebTestRunConfiguration>
          </TestTypeSpecific>
          <AgentRule name="Execution Agents">
          </AgentRule>
        </Execution>
        <Deployment runDeploymentRoot="yuta_MATVAIO 2016-12-02 17_29_02" />
        <Properties>
          <Property name="TestSettingsUIType" value="LoadTest" />
        </Properties>
      </TestSettings>
      <WebTestResultFilePath>yuta_MATVAIO 2016-12-02 17_29_02\In\b1f296f3-42b6-4918-b58a-2689d6274516\WebTest1.webtestResult</WebTestResultFilePath>
    </WebTestResult>
  </Results>
</TestRun>