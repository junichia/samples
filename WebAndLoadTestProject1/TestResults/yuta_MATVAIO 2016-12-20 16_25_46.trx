<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="bb403f21-9324-4f9e-9b84-8a5f98e8a43f" name="yuta@MATVAIO 2016-12-20 16:25:46" runUser="MATVAIO\yuta" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="ローカル" id="af615b3f-2787-4d40-8c72-eb877e5b5b59">
    <Description>これらはローカル テスト実行用の既定のテスト設定です。</Description>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
    <Deployment runDeploymentRoot="yuta_MATVAIO 2016-12-20 16_25_46" />
    <Properties>
      <Property name="TestSettingsUIType" value="LoadTest" />
    </Properties>
  </TestSettings>
  <Times creation="2016-12-20T16:25:46.8387724+09:00" queuing="2016-12-20T16:25:47.1091167+09:00" start="2016-12-20T16:25:47.1850736+09:00" finish="2016-12-20T16:26:03.4357048+09:00" />
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <WebTest name="WebTest1" storage="d:\src\yuta\webandloadtestproject1\webandloadtestproject1\webtest1.webtest" id="a20ed876-00c3-4cdb-8138-c57f398c88d8" persistedWebTest="">
      <Execution id="68ac1a92-237c-4a7a-8175-064e0c83da7d" />
    </WebTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="一覧に存在しない結果" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="読み込まれたすべての結果" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="a20ed876-00c3-4cdb-8138-c57f398c88d8" executionId="68ac1a92-237c-4a7a-8175-064e0c83da7d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <WebTestResult executionId="68ac1a92-237c-4a7a-8175-064e0c83da7d" testId="a20ed876-00c3-4cdb-8138-c57f398c88d8" testName="WebTest1" computerName="MATVAIO" duration="00:00:05.5453146" startTime="2016-12-20T16:25:47.2501215+09:00" endTime="2016-12-20T16:26:03.3996835+09:00" testType="4e7599fa-5ecb-43e9-a887-cd63cf72d207" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="68ac1a92-237c-4a7a-8175-064e0c83da7d">
      <Output>
        <ErrorInfo>
          <Message>8 件のプライマリ要求、0 件の依存要求、および 0 件の条件付き規則に失敗しました</Message>
        </ErrorInfo>
      </Output>
      <ResultFiles>
        <ResultFile path="WebTest1.webtestResult" />
      </ResultFiles>
      <TestSettings name="ローカル" id="af615b3f-2787-4d40-8c72-eb877e5b5b59">
        <Description>これらはローカル テスト実行用の既定のテスト設定です。</Description>
        <Execution>
          <TestTypeSpecific>
            <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
              <Browser name="Internet Explorer 9.0" MaxConnections="6">
                <Headers>
                  <Header name="User-Agent" value="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)" />
                  <Header name="Accept" value="*/*" />
                  <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
                  <Header name="Accept-Encoding" value="GZIP" />
                </Headers>
              </Browser>
            </WebTestRunConfiguration>
          </TestTypeSpecific>
          <AgentRule name="Execution Agents">
          </AgentRule>
        </Execution>
        <Deployment runDeploymentRoot="yuta_MATVAIO 2016-12-20 16_25_46" />
        <Properties>
          <Property name="TestSettingsUIType" value="LoadTest" />
        </Properties>
      </TestSettings>
      <WebTestResultFilePath>yuta_MATVAIO 2016-12-20 16_25_46\In\68ac1a92-237c-4a7a-8175-064e0c83da7d\WebTest1.webtestResult</WebTestResultFilePath>
    </WebTestResult>
  </Results>
</TestRun>