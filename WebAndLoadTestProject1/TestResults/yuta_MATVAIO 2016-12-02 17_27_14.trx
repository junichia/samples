<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="914e429f-66b4-49eb-b796-b79d698cab7e" name="yuta@MATVAIO 2016-12-02 17:27:14" runUser="MATVAIO\yuta" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="ローカル" id="af615b3f-2787-4d40-8c72-eb877e5b5b59">
    <Description>これらはローカル テスト実行用の既定のテスト設定です。</Description>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
    <Deployment runDeploymentRoot="yuta_MATVAIO 2016-12-02 17_27_14" />
    <Properties>
      <Property name="TestSettingsUIType" value="LoadTest" />
    </Properties>
  </TestSettings>
  <Times creation="2016-12-02T17:27:14.3067191+09:00" queuing="2016-12-02T17:27:14.5994325+09:00" start="2016-12-02T17:27:14.7185023+09:00" finish="2016-12-02T17:27:44.7123612+09:00" />
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <WebTest name="WebTest1" storage="d:\src\yuta\webandloadtestproject1\webandloadtestproject1\webtest1.webtest" id="a20ed876-00c3-4cdb-8138-c57f398c88d8" persistedWebTest="">
      <Execution id="a05af5ba-2742-4b9e-b7e4-81dc91c64e53" />
    </WebTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="一覧に存在しない結果" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="読み込まれたすべての結果" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="a20ed876-00c3-4cdb-8138-c57f398c88d8" executionId="a05af5ba-2742-4b9e-b7e4-81dc91c64e53" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <WebTestResult executionId="a05af5ba-2742-4b9e-b7e4-81dc91c64e53" testId="a20ed876-00c3-4cdb-8138-c57f398c88d8" testName="WebTest1" computerName="MATVAIO" duration="00:00:19.0007398" startTime="2016-12-02T17:27:14.7865563+09:00" endTime="2016-12-02T17:27:44.4442289+09:00" testType="4e7599fa-5ecb-43e9-a887-cd63cf72d207" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a05af5ba-2742-4b9e-b7e4-81dc91c64e53">
      <Output>
        <ErrorInfo>
          <Message>12 件のプライマリ要求、10 件の依存要求、および 0 件の条件付き規則に失敗しました</Message>
        </ErrorInfo>
      </Output>
      <ResultFiles>
        <ResultFile path="WebTest1.webtestResult" />
      </ResultFiles>
      <TestSettings name="ローカル" id="af615b3f-2787-4d40-8c72-eb877e5b5b59">
        <Description>これらはローカル テスト実行用の既定のテスト設定です。</Description>
        <Execution>
          <TestTypeSpecific>
            <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
              <Browser name="Internet Explorer 9.0" MaxConnections="6">
                <Headers>
                  <Header name="User-Agent" value="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)" />
                  <Header name="Accept" value="*/*" />
                  <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
                  <Header name="Accept-Encoding" value="GZIP" />
                </Headers>
              </Browser>
            </WebTestRunConfiguration>
          </TestTypeSpecific>
          <AgentRule name="Execution Agents">
          </AgentRule>
        </Execution>
        <Deployment runDeploymentRoot="yuta_MATVAIO 2016-12-02 17_27_14" />
        <Properties>
          <Property name="TestSettingsUIType" value="LoadTest" />
        </Properties>
      </TestSettings>
      <WebTestResultFilePath>yuta_MATVAIO 2016-12-02 17_27_14\In\a05af5ba-2742-4b9e-b7e4-81dc91c64e53\WebTest1.webtestResult</WebTestResultFilePath>
    </WebTestResult>
  </Results>
</TestRun>